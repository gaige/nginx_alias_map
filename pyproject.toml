[tool.poetry]
name = "pelican-nginx-alias-map"
version = "2.0.4"
description = "This Pelican plugin creates an nginx-compatible map between the final page locations and prior locations, defined in the `Alias` attribute for any article or page."
authors = ["Gaige B. Paulsen <gaige@cluetrust.com>"]
license = "MIT"
readme = "README.md"
keywords = ["pelican", "plugin"]
repository = "https://github.com/gaige/nginx_alias_map"
documentation = "https://docs.getpelican.com"
packages = [
    { include = "pelican" },
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/gaige/nginx_alias_map/issues"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
pelican = ">=4.5"
markdown = {version = ">=3.2, != 3.3.5", optional = true}

[tool.poetry.dev-dependencies]
black = {version = "^24.8"}
flake8 = "^4.0"
flake8-black = "^0.3"
invoke = "^2.2"
isort = "^5.4"
livereload = "^2.7"
markdown = "^3.7"
pytest = "^8.3.3"
pytest-cov = "^3.0"
pytest-pythonpath = "^0.7"
pytest-sugar = "^1.0"
Werkzeug = "^3.0"

[tool.poetry.extras]
markdown = ["markdown"]

[tool.commitizen]
version_provider = "poetry"
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true

[tool.commitizen.customize]
commit_parser = "^(?P<change_type>feature|bug fix|dependencies):\\s(?P<message>.*)?"
changelog_pattern = "^(feature|bug fix|dependencies)?(!)?"
change_type_map = {"feature" = "Feat", "bug fix" = "Fix", "dependencies" = "Build"}

[tool.isort]
# Maintain compatibility with Black
profile = "black"
multi_line_output = 3

# Sort imports within their section independent of the import type
force_sort_within_sections = true

# Designate "pelican" as separate import section
known_pelican = "pelican"
sections = "FUTURE,STDLIB,THIRDPARTY,PELICAN,FIRSTPARTY,LOCALFOLDER"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
